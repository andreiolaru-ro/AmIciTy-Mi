<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  Copyright (C) 2013 Andrei Olaru. See the AUTHORS file for more information.
  
  This file is part of AmIciTy-Mi.
  
  AmIciTy-Mi is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.
  
  AmIciTy-Mi is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public License along with AmIciTy-Mi.  If not, see <http://www.gnu.org/licenses/>.
-->
<schema xmlns="http://www.w3.org/2001/XMLSchema"
	xmlns:tns="http://www.example.org/parameterSchema"
	elementFormDefault="qualified"
	targetNamespace="http://www.example.org/parameterSchema">

	<!-- 
		You can have a set of parameters or just a value.
		Set of parameters is useful to generate values.
	 -->
	<group name="parameters">
		<sequence>
			<element name="first" type="decimal" minOccurs="0" maxOccurs="1" />
			<element name="last" type="decimal" minOccurs="0" maxOccurs="1" />
			<element name="count" type="nonNegativeInteger" minOccurs="0"
				maxOccurs="1" />
			<element name="mean" type="decimal" minOccurs="0" maxOccurs="1" />
			<element name="dev" type="decimal" minOccurs="0" maxOccurs="1" />
			<element name="min" type="decimal" minOccurs="0" maxOccurs="1" />
			<element name="max" type="decimal" minOccurs="0" maxOccurs="1" />
			<element name="list" type="string" minOccurs="0" maxOccurs="1" />
			<element name="select" type="nonNegativeInteger" minOccurs="0"
				maxOccurs="1" />
			<element name="step" type="decimal" minOccurs="0" maxOccurs="1" />
			<element name="foreach" type="string" minOccurs="0"
				maxOccurs="unbounded" />
		</sequence>
	</group>


	
	<complexType name="eventStringValue">
		<choice>
			<group ref="tns:parameters" />
			<element name="value" type="string" />
		</choice>
	</complexType>

	<complexType name="eventIntegerValue">
		<choice>
			<group ref="tns:parameters" />
			<element name="value" type="integer" />
		</choice>
	</complexType>

	<complexType name="eventDecimalValue">
		<choice>
			<group ref="tns:parameters" />
			<element name="value" type="decimal" />
		</choice>
	</complexType>

	<complexType name="eventBoundedValue">
		<choice>
			<group ref="tns:parameters" />
			<element name="value">
				<simpleType>
					<restriction base="decimal">
						<minInclusive value="0" />
						<maxInclusive value="1" />
					</restriction>
				</simpleType>
			</element>
		</choice>
	</complexType>

</schema>
